%include <sched_prolog.h>
%include <sched_shmem.h>
%include <script_prolog.h>
%include <mod_icon.h>

safe_rm_rf $REMAP_DIR

mkdir -p $REMAP_DIR
mkdir -p $REMAP_DIR/data
cd $REMAP_DIR

# data in $RETRIEVE_IC_BC_DIR_COMMON/data/ec_202308300000+0132.grib
# ec_${DATE}${TIME}+$(printf "%%04d" $clepstep).grib
#datafile=...

# verify for OpenMP
export OMP_SCHEDULE="static"
export OMP_DYNAMIC="false"
export RLIMIT_CORE=0
export ATP_MAX_CORES=0
export ATP_ENABLED=1

# file names
export IN_GRID=$RETRIEVE_IC_BC_DIR_COMMON/data/ec_${DATE}${TIME}+0000.grib

# initial condition
export IN_FILE=$RETRIEVE_IC_BC_DIR_COMMON/data/ec_${DATE}${TIME}+0000.grib
export OUT_FILE=$REMAP_DIR/data/ic_${DATE}${TIME}.nc
conf_template iconremap_IC.nml
$BIN_DIR/iconremap -vvv --remap_nml=iconremap_IC.nml

if [ "$ENS_MEMB" = 0 ] ; then # deterministic
    hincbd=$DET_HINCBD
else
    hincbd=$EPS_HINCBD
fi

# boundary conditions
for trange in `seq 0 $hincbd $MODEL_STOP`; do
    dd=`printf "%%02d" $((trange/24))`
    hh=`printf "%%02d" $((trange%%24))`
    if [ "$trange" = "0" ]; then
        export IN_FILE=$RETRIEVE_IC_BC_DIR_COMMON/data/ec_${DATE}${TIME}+$(printf "%%04d" $trange).grib
    else
# at steps >0 copy hybrid level surface orography to lbc, it would be
# more elegant to do it in retrieve phase but an additional task would
# be needed because we need IC and BC simultaneously
        export IN_FILE=$RETRIEVE_IC_BC_DIR_COMMON/data/ec_${DATE}${TIME}+$(printf "%%04d" $trange).z.grib
        grib_set -s stepRange=$trange -w shortName=FI -S $RETRIEVE_IC_BC_DIR_COMMON/data/ec_${DATE}${TIME}+0000.grib $IN_FILE
        cat $RETRIEVE_IC_BC_DIR_COMMON/data/ec_${DATE}${TIME}+$(printf "%%04d" $trange).grib >> $IN_FILE
    fi
    export OUT_FILE=$REMAP_DIR/data/lbc_${DATE}${TIME}_${dd}${hh}0000.nc
    conf_template iconremap_BC.nml
    $BIN_DIR/iconremap -vvv --remap_nml=iconremap_BC.nml &
done
