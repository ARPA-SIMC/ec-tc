%include <sched_prolog.h>
%include <sched_parallel.h>
%include <script_prolog.h>

safe_rm_rf $REMAP_DIR

mkdir -p $REMAP_DIR
mkdir -p $REMAP_DIR/data
cd $REMAP_DIR

# data in $RETRIEVE_IC_BC_DIR_COMMON/data/ec_202308300000+0132.grib
# ec_${DATE}${TIME}+$(printf "%%04d" $clepstep).grib
#datafile=...
# to be moved in conf and include:
module load prgenv/intel
module load intel/2021.4.0
module load hpcx-openmpi/2.9.0
module load hdf5/1.10.6
module load netcdf4/4.7.4
module load ecmwf-toolbox/2023.10.1.0
module load aec
module load intel-mkl/19.0.5

# verify for OpenMP
export OMP_SCHEDULE="static"
export OMP_DYNAMIC="false"
export RLIMIT_CORE=0
export ATP_MAX_CORES=0
export ATP_ENABLED=1

# update
DWDPERM=/perm/dwg/
export ECCODES_DEFINITION_PATH=$DWDPERM/grib_api_def/ec-2.31.0/definitions.edzw:$DWDPERM/grib_api_def/ec-2.31.0/definitions
export ECCODES_SAMPLES_PATH=$DWDPERM/grib_api_def/ec-2.31.0/samples-19.1

# file names
export IN_GRID=$RETRIEVE_IC_BC_DIR_COMMON/data/ec_${DATE}${TIME}+0000.grib
export OUT_GRID=$CONST_DIR/icon-leps-7km_DOM01.nc

# initial condition
export IN_FILE=$RETRIEVE_IC_BC_DIR_COMMON/data/ec_${DATE}${TIME}+0000.grib
export OUT_FILE=$REMAP_DIR/data/ic_${DATE}${TIME}.nc
conf_template iconremap_IC.nml
$BIN_DIR/iconremap -vvv --remap_nml=iconremap_IC.nml

# boundary conditions
for trange in `seq 0 3 6`; do # 132
    export IN_FILE=$RETRIEVE_IC_BC_DIR_COMMON/data/ec_${DATE}${TIME}+$(printf "%%04d" $trange).grib
    export OUT_FILE=$REMAP_DIR/data/lbc_${DATE}${TIME}+$(printf "%%04d" $trange).nc
    conf_template iconremap_BC.nml
    $BIN_DIR/iconremap -vvv --remap_nml=iconremap_BC.nml
done
